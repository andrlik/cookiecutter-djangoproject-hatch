# Displays output of `just --list`
default:
  just --list

# Installs python dependencies and mypy types.
_install:
  hatch env create default

# Installs pre-commit hooks in local repo.
_pre-commit-install:
  hatch run python -m pip install pre-commit
  hatch run pre-commit install

# Installs dependencies and mypy types and installs pre-commit hooks.
setup: _install _pre-commit-install

# Open django shell_plus instance.
console:
  hatch run python manage.py shell_plus

# Start up development server.
server:
  hatch run python manage.py runserver

# Rsync python environment with dependencies and run db migrations.
update: _install
  hatch run python manage.py migrate

# Run code style formatters pyupgrade, isort, and black.
codestyle:
  hatch run pyupgrade --exit-zero-even-if-changed --py39-plus **/*.py
  hatch run isort --settings-path pyproject.toml ./
  hatch run black --config pyproject.toml ./

# Run isort, black, and darglint in check-only mode.
check-codestyle:
  hatch run isort --diff --check-only --settings-path pyproject.toml ./
  hatch run black --diff --check --config pyproject.toml ./
  hatch run darglint --verbosity 2 {{ cookiecutter.package_name }}

# Runs mypy type-checking.
mypy:
  hatch run mypy --install-types --config-file pyproject.toml ./

# Runs test suite.
test:
  hatch run cov

# Runs poetry safety checks and bandit checks.
check-safety:
  hatch run safety check --full-report
  hatch run bandit -ll --recursive {{ cookiecutter.project_slug }} tests

# Runs test suite, check-codestyle, mypy, and safety checks.
lint: test check-codestyle mypy check-safety

# Removes pycache directories and files.
_pycache-remove:
  find . | grep -E "(__pycache__|\.pyc|\.pyo$$)" | xargs rm -rf

# Removes generated builds and dist files.
_build-remove:
  -rm -rf build/
  -rm -rf dist/

# Clean up pycache files/dirs and generated builds.
clean: _pycache-remove _build-remove
